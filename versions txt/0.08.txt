import os
import time
from PIL import Image, ImageEnhance, ImageGrab
import pytesseract
import pyperclip
import re
import pandas as pd

print("Hello World!")

while True:
    # Wait for a new image to be pasted into the clipboard
    pyperclip.waitForNewPaste()

    # Get the image from the clipboard
    image = ImageGrab.grabclipboard()

    # Check if the image exists
    if image is not None:
        # Increase the image quality
        enhancer = ImageEnhance.Contrast(image)
        image = enhancer.enhance(1.5)
        enhancer = ImageEnhance.Brightness(image)
        image = enhancer.enhance(1.2)
        enhancer = ImageEnhance.Sharpness(image)
        image = enhancer.enhance(1.5)

        # Resize the image to increase the DPI
        image = image.resize((image.size[0] * 2, image.size[1] * 2), resample=Image.BICUBIC)

        # Perform OCR on the image
        data = pytesseract.image_to_data(image, lang='eng', config='--psm 6 --oem 1', output_type='data.frame')

        # Filter out empty rows
        data = data[data['conf'] != -1]

        # Add space after each character in each row, except for the last character in the row
        data['text_with_space'] = data.apply(
            lambda row: row['text'] + ' ' if row['text'] != '' and row['left'] + row['width'] < image.size[0] else row[
                'text'], axis=1)

        # Concatenate the text_with_space column for each row into a single string, separated by newline characters
        ocr_text = '\n'.join(data.groupby('block_num')['text_with_space'].apply(lambda x: ''.join(x))).strip()

        # Clean up the text
        ocr_text = re.sub(r'[^\x00-\x7F]+', '', ocr_text)

        # Get dir, Create a subdirectory named "pics" in the same directory as the Python script
        dir_path = os.path.dirname(os.path.realpath(__file__))
        pics_dir_path = os.path.join(dir_path, "pics")
        if not os.path.exists(pics_dir_path):
            os.makedirs(pics_dir_path)

        # Save the image to the "pics" subdirectory
        filename = time.time()

        if image:
            image.save(os.path.join(pics_dir_path, f"{filename}_clipboard_image.png"), "PNG")

        # Write the output back to the clipboard
        pyperclip.copy(ocr_text)

        # Create a new file in the same directory as the script to save the OCR text
        with open(os.path.join(pics_dir_path, f"{filename}_clipboard_text.txt"), 'w') as f:
            f.write(ocr_text)

        print("OCR output has been copied to the clipboard.")
    else:
        print("No image found in the clipboard.")
